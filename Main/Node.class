package Main;

import java.text.DecimalFormat;
import java.util.ArrayList;

public class Node {
    // Subclass node values are private. So, it is immutable. Preventing users accidentally change it's values
    private int vertexId = -1;
    private double pageRank = 0.0;

    private int outDegree = -1;
    private int revDegree = -1;
    private int rDegree = -1;
    private int index = -1;
    private boolean inGraph = false;
    private boolean visited = false;


    public Node() {
        this.vertexId = vertexId;
        this.pageRank = pageRank;
        this.outDegree = outDegree;
        this.rDegree = rDegree;
        this.index = index;
        this.revDegree = revDegree;

    }

    public int getRevDegree() {
        return revDegree;
    }

    public void setRevDegree(int revDegree) {
        this.revDegree = revDegree;
    }

    public int getIndex() {
        return index;
    }

    public void setIndex(int index) {
        this.index = index;
    }

    public boolean isInGraph() {
        return inGraph;
    }

    public void setInGraph(boolean inGraph) {
        this.inGraph = inGraph;
    }

    public boolean isVisited() {
        return visited;
    }

    public void setVisited(boolean visited) {
        this.visited = visited;
    }


    ArrayList<Integer> adj = new ArrayList<>();
    ArrayList<Integer> revAdj = new ArrayList<>();

    public int getVertexId() {
        return vertexId;
    }

    public void setVertexId(int vertexId) {
        this.vertexId = vertexId;
    }

    public double getPageRank() {
        return pageRank;
    }

    public void setPageRank(double pageRank) {
        this.pageRank = pageRank;
    }

    public int getOutDegree() {
        return outDegree;
    }

    public void setOutDegree(int outDegree) {
        this.outDegree = outDegree;
    }

    public int getrDegree() {
        return rDegree;
    }

    public void setrDegree(int rDegree) {
        this.rDegree = rDegree;
    }

    public ArrayList<Integer> getAdj() {
        return adj;
    }

    public void setAdj(ArrayList<Integer> adj) {
        this.adj = adj;
    }

    // Equals attribute is overridden. So the subclass node can be compared and preventing
    // multiple same values with different hash values. Therefore, if Class Node values are
    // the same it means it must have the same hash number.
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Node) || o == null) return false;

        Node node = (Node) o;

        return (node.vertexId == this.vertexId);
    }

    // If Class Nodes are the same prevent giving a new hash number. Therefore, hashCode is overridden
    @Override
    public int hashCode() {
        int result;
        long temp;
        result = getVertexId();
        temp = Double.doubleToLongBits(getPageRank());
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        result = 31 * result + getOutDegree();
        return result;
    }
}
